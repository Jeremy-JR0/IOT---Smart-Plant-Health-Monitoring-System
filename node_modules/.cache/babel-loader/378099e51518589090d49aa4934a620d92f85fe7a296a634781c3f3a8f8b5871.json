{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shado\\\\OneDrive\\\\Documents\\\\YEAR 4\\\\SEM 2\\\\Internet of Things\\\\IOT-Smart-Plant-Health-Monitoring-System\\\\src\\\\pages\\\\PlantGallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../PlantGallery.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyPlants() {\n  _s();\n  const [plants, setPlants] = useState([]);\n  const [newPlant, setNewPlant] = useState({\n    name: '',\n    number: plants.length + 1,\n    date: '',\n    image: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPlant({\n      ...newPlant,\n      [name]: value\n    });\n  };\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setNewPlant({\n        ...newPlant,\n        image: URL.createObjectURL(file) // Temporarily set the uploaded image URL\n      });\n    }\n  };\n  const handleAddPlant = async () => {\n    if (newPlant.name.trim() !== '' && newPlant.date !== '') {\n      const plantToAdd = {\n        id: newPlant.number,\n        name: newPlant.name,\n        image: newPlant.image || 'plant-placeholder.png',\n        date: newPlant.date\n      };\n      setPlants([...plants, plantToAdd]);\n      setNewPlant({\n        name: '',\n        number: plants.length + 2,\n        date: '',\n        image: ''\n      });\n\n      // Call API to save plant in the backend\n      await fetch('/api/plants', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(plantToAdd)\n      });\n    }\n  };\n  const handleDeletePlant = id => {\n    setPlants(plants.filter(plant => plant.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-plants-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Plants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plants-grid\",\n      children: plants.map(plant => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plant-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: plant.image || 'plant-placeholder.png',\n          alt: plant.name,\n          className: \"plant-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"#\", plant.id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 28\n          }, this), \" \", plant.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Planted on: \", plant.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-plant-btn\",\n          onClick: () => handleDeletePlant(plant.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, plant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-plant-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Enter plant name\",\n        value: newPlant.name,\n        onChange: handleInputChange,\n        className: \"plant-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"number\",\n        placeholder: \"Enter plant number\",\n        value: newPlant.number,\n        onChange: handleInputChange,\n        className: \"plant-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: newPlant.date,\n        onChange: handleInputChange,\n        className: \"plant-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        className: \"plant-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-plant-btn\",\n        onClick: handleAddPlant,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(MyPlants, \"sE1tOmuWfq2gG9+3J47Wm7gIsII=\");\n_c = MyPlants;\nexport default MyPlants;\nvar _c;\n$RefreshReg$(_c, \"MyPlants\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyPlants","_s","plants","setPlants","newPlant","setNewPlant","name","number","length","date","image","handleInputChange","e","value","target","handleImageUpload","file","files","URL","createObjectURL","handleAddPlant","trim","plantToAdd","id","fetch","method","headers","body","JSON","stringify","handleDeletePlant","filter","plant","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","onClick","type","placeholder","onChange","accept","_c","$RefreshReg$"],"sources":["C:/Users/shado/OneDrive/Documents/YEAR 4/SEM 2/Internet of Things/IOT-Smart-Plant-Health-Monitoring-System/src/pages/PlantGallery.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../PlantGallery.css'; // Import the CSS file for styling\r\n\r\nfunction MyPlants() {\r\n  const [plants, setPlants] = useState([]);\r\n\r\n  const [newPlant, setNewPlant] = useState({\r\n    name: '',\r\n    number: plants.length + 1,\r\n    date: '',\r\n    image: ''\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewPlant({\r\n      ...newPlant,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setNewPlant({\r\n        ...newPlant,\r\n        image: URL.createObjectURL(file) // Temporarily set the uploaded image URL\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddPlant = async () => {\r\n    if (newPlant.name.trim() !== '' && newPlant.date !== '') {\r\n      const plantToAdd = {\r\n        id: newPlant.number,\r\n        name: newPlant.name,\r\n        image: newPlant.image || 'plant-placeholder.png',\r\n        date: newPlant.date\r\n      };\r\n      setPlants([...plants, plantToAdd]);\r\n      setNewPlant({ name: '', number: plants.length + 2, date: '', image: '' });\r\n\r\n      // Call API to save plant in the backend\r\n      await fetch('/api/plants', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(plantToAdd),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeletePlant = (id) => {\r\n    setPlants(plants.filter((plant) => plant.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-plants-container\">\r\n      <h1>My Plants</h1>\r\n      <div className=\"plants-grid\">\r\n        {plants.map((plant) => (\r\n          <div key={plant.id} className=\"plant-card\">\r\n            <img src={plant.image || 'plant-placeholder.png'} alt={plant.name} className=\"plant-image\" />\r\n            <p>#{plant.id} <br /> {plant.name}</p>\r\n            <p>Planted on: {plant.date}</p>\r\n            <button className=\"delete-plant-btn\" onClick={() => handleDeletePlant(plant.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"add-plant-form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter plant name\"\r\n          value={newPlant.name}\r\n          onChange={handleInputChange}\r\n          className=\"plant-input\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"number\"\r\n          placeholder=\"Enter plant number\"\r\n          value={newPlant.number}\r\n          onChange={handleInputChange}\r\n          className=\"plant-input\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={newPlant.date}\r\n          onChange={handleInputChange}\r\n          className=\"plant-input\"\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n          className=\"plant-input\"\r\n        />\r\n        <button className=\"add-plant-btn\" onClick={handleAddPlant}>+</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPlants;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,IAAI,EAAE,EAAE;IACRC,MAAM,EAAEL,MAAM,CAACM,MAAM,GAAG,CAAC;IACzBC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEN,IAAI;MAAEO;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCT,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACE,IAAI,GAAGO;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,iBAAiB,GAAIH,CAAC,IAAK;IAC/B,MAAMI,IAAI,GAAGJ,CAAC,CAACE,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAID,IAAI,EAAE;MACRX,WAAW,CAAC;QACV,GAAGD,QAAQ;QACXM,KAAK,EAAEQ,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC,CAAC;MACnC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAIhB,QAAQ,CAACE,IAAI,CAACe,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIjB,QAAQ,CAACK,IAAI,KAAK,EAAE,EAAE;MACvD,MAAMa,UAAU,GAAG;QACjBC,EAAE,EAAEnB,QAAQ,CAACG,MAAM;QACnBD,IAAI,EAAEF,QAAQ,CAACE,IAAI;QACnBI,KAAK,EAAEN,QAAQ,CAACM,KAAK,IAAI,uBAAuB;QAChDD,IAAI,EAAEL,QAAQ,CAACK;MACjB,CAAC;MACDN,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEoB,UAAU,CAAC,CAAC;MAClCjB,WAAW,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAEL,MAAM,CAACM,MAAM,GAAG,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC;;MAEzE;MACA,MAAMc,KAAK,CAAC,aAAa,EAAE;QACzBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU;MACjC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMQ,iBAAiB,GAAIP,EAAE,IAAK;IAChCpB,SAAS,CAACD,MAAM,CAAC6B,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACT,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,oBACExB,OAAA;IAAKkC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCnC,OAAA;MAAAmC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBvC,OAAA;MAAKkC,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBhC,MAAM,CAACqC,GAAG,CAAEP,KAAK,iBAChBjC,OAAA;QAAoBkC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACxCnC,OAAA;UAAKyC,GAAG,EAAER,KAAK,CAACtB,KAAK,IAAI,uBAAwB;UAAC+B,GAAG,EAAET,KAAK,CAAC1B,IAAK;UAAC2B,SAAS,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7FvC,OAAA;UAAAmC,QAAA,GAAG,GAAC,EAACF,KAAK,CAACT,EAAE,EAAC,GAAC,eAAAxB,OAAA;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,KAAC,EAACN,KAAK,CAAC1B,IAAI;QAAA;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCvC,OAAA;UAAAmC,QAAA,GAAG,cAAY,EAACF,KAAK,CAACvB,IAAI;QAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BvC,OAAA;UAAQkC,SAAS,EAAC,kBAAkB;UAACS,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACE,KAAK,CAACT,EAAE,CAAE;UAAAW,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAJxFN,KAAK,CAACT,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENvC,OAAA;MAAKkC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BnC,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXrC,IAAI,EAAC,MAAM;QACXsC,WAAW,EAAC,kBAAkB;QAC9B/B,KAAK,EAAET,QAAQ,CAACE,IAAK;QACrBuC,QAAQ,EAAElC,iBAAkB;QAC5BsB,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFvC,OAAA;QACE4C,IAAI,EAAC,QAAQ;QACbrC,IAAI,EAAC,QAAQ;QACbsC,WAAW,EAAC,oBAAoB;QAChC/B,KAAK,EAAET,QAAQ,CAACG,MAAO;QACvBsC,QAAQ,EAAElC,iBAAkB;QAC5BsB,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFvC,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXrC,IAAI,EAAC,MAAM;QACXO,KAAK,EAAET,QAAQ,CAACK,IAAK;QACrBoC,QAAQ,EAAElC,iBAAkB;QAC5BsB,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFvC,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXG,MAAM,EAAC,SAAS;QAChBD,QAAQ,EAAE9B,iBAAkB;QAC5BkB,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFvC,OAAA;QAAQkC,SAAS,EAAC,eAAe;QAACS,OAAO,EAAEtB,cAAe;QAAAc,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrC,EAAA,CAtGQD,QAAQ;AAAA+C,EAAA,GAAR/C,QAAQ;AAwGjB,eAAeA,QAAQ;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}